# database intro

relational databases -

store rows and columns in tables. the power of the relational database lies in its ability to retrieve data from those tables and in particular where there are multiple tables and relationships between those tables involved in the query

Mathmatics and Terminology:

Database - contains many tables

Relation (or table) - contains tuples and attributes

Tuple (or row) - a set of fields that generally represents an "object" like a person or a music track

Attribute (also column or field) - one of possibly many elements of data corresponding to the object represented by the row

model data at a connection point: "if you model everything as a connection" = the underlying math which makes databases fast

schema - rules which dictate what type of formatted data can be in each field

SQL (structured query language) is what we use to issue commands to the database 

- create a table
- retrieve some data
- insert data
- delete data

instead of code just talking to files, it talks to the database application layer (abstraction).

our job was easier because complexity could be hidden in database. 

communicate with DB via API

the database and our web application can be regarded as a "service". what is the cutpoint between our app and the database

SQL used for API interfaces

python handles the unstructured rough data. python cleans and SQL stores.

CRUD
- create
- read
- update
- delete